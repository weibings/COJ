{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport {AuthService} from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n  constructor(public auth: AuthService){\n    auth.handleAuthentication();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\n\nimport {routingModule} from './app.routes'\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\n\nimport {DataService} from './services/data.service';\nimport {CollaborationService} from './services/collaboration.service';\nimport {AuthService} from './services/auth.service';\nimport {AuthGuardService} from './services/auth-guard.service';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    ProfileComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [DataService, AuthService, AuthGuardService, CollaborationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {RouterModule, Routes} from '@angular/router';\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport {ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {NgModule} from '@angular/core';\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo:\"problems\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"problems\",\n    component:ProblemListComponent\n  },\n  {\n    path:\"problems/:id\",\n    component:ProblemDetailComponent,\n  },\n  {\n    path:\"profile\",\n    component:ProfileComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path:\"**\",\n    redirectTo: \"problems\"\n  }\n];\n\n@NgModule({\n  imports:[RouterModule.forRoot(routes, {enableTracing: true})],\n  exports: [RouterModule]\n})\n\nexport class routingModule {};\n","module.exports = \"@media screen {\\n    #editor {\\n      /* position: absolute; */\\n\\n      width:600px;\\n      height: 600px;\\n    }\\n    .lang-select {\\n      width: 100px;\\n      margin-right: 10px;\\n    }\\n    header .btn {\\n      margin: 0 5px;\\n    }\\n    footer .btn {\\n      margin: 0 5px;\\n    }\\n    .editor-footer, .editor-header {\\n      margin: 10px 0;\\n    }\\n    .cursor {\\n      /*position:absolute;*/\\n      background: rgba(0, 250, 0, 0.5);\\n      z-index: 40;\\n      width: 2px !important;\\n    }\\n}\\n\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <div class=\\\"row\\\">\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n​\\n    <!-- reset button -->\\n    <!-- Button trigger modal -->\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n      <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span>\\n    </button>\\n  </div>\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Reset</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the window, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">Reset</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div class=\\\"row\\\">\\n      <div id=\\\"editor\\\"></div>\\n  </div>\\n  <div>\\n  {{output}}\\n</div>\\n​\\n<footer class=\\\"editor-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit Solution</button>\\n</footer>\\n</section>\\n\"","import { Component, OnInit, Injector } from '@angular/core';\nimport {CollaborationService} from '../../services/collaboration.service'\nimport {ActivatedRoute, Params} from '@angular/router';\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css'],\n  providers: [CollaborationService]\n})\nexport class EditorComponent implements OnInit {\n\n  editor: any;\n  languages: string[] = ['Java', 'Python'];\n  language: string = 'Java';\n\n  sessionId: string;\n\n  output: string;\n\n  defaultContent = {\n    'Java': `public class Example {\n      public static void main(String[] args) {\n          // Type your Java code here\n      }\n    }`,\n    'C++': `#include <iostream>\n    using namespace std;\n    ​\n    int main() {\n       // Type your C++ code here\n       return 0;\n     }`,\n    'Python': `class Solution:\n     def example():\n     # Write your Python code here`\n  };\n\n  constructor(private collaboration: CollaborationService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params\n        .subscribe(params=>{\n          this.sessionId = params['id'];\n          this.initEditor();\n        });\n      }\n    initEditor(){\n    this.editor = ace.edit('editor');\n    this.editor.setTheme('ace/theme/eclipse');\n    this.resetEditor();\n    this.editor.setValue(this.defaultContent['Java']);\n    this.editor.$blockScrolling = Infinity;\n\n    document.getElementsByTagName('textarea')[0].focus();\n    this.collaboration.init(this.editor, this.sessionId);\n    this.editor.lastAppliedChange = null;\n\n    this.editor.on(\"change\", (e)=>{\n      console.log('editor changes: '+JSON.stringify(e));\n      if(this.editor.lastAppliedChange != e){\n        this.collaboration.change(JSON.stringify(e));\n      }\n    })\n  }\n\n  resetEditor(): void {\n      this.editor.setValue(this.defaultContent[this.language]);\n      this.editor.session.setMode(\"ace/mode/\" + this.language.toLowerCase());\n  }\n\n  setLanguage(language: string): void {\n      this.language = language;\n      this.resetEditor();\n  }\n\n  submit(): void {\n      let user_code = this.editor.getValue();\n      console.log(\"The user code is --------------\");\n      console.log(user_code);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n\\n  <form class=\\\"form-inline my-2 my-lg-0\\\">\\n    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Problem\\\" aria-label=\\\"Search\\\">\\n  </form>\\n  <ul class=\\\"nav navbar-right mr-auto\\\">\\n    <li class=\\\"nav-item\\\">\\n      <form class=\\\"nvbar-form\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-primary\\\" *ngIf=\\\"!isAuthenticated()\\\" (click)=\\\"login()\\\">Sign in</button>\\n      </form>\\n    </li>\\n    <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"isAuthenticated()\\\">\\n      <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        {{username}}\\n      </a>\\n      <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n        <li><a class=\\\"dropdown-item\\\" routerLink=\\\"/profile\\\">My Profile</a></li>\\n      <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">My favorites</a></li>\\n        <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">My submissions</a></li>\\n        <li><div class=\\\"dropdown-divider\\\"></div></li>\\n        <li><button type=\\\"button\\\" class=\\\"btn btn-md btn-primary dropdown-item\\\" (click)=\\\"logout()\\\">Log out</button></li>\\n      </ul>\\n    </li>\\n  </ul>\\n</div>\\n</nav>\\n</div>\\n\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n  providers:[AuthService]\n})\nexport class NavbarComponent implements OnInit {\n  title = \"COJ\";\n  username = \"\";\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    //console.log(\"userProfile2:\"+this.auth.userProfile);\n    if (this.auth.userProfile) {\n      this.username = this.auth.userProfile.nickname;\n    }\n  }\n\n  login(): void {\n    this.auth.login();\n    // if(this.auth.userProfile){\n    //   this.username = this.auth.userProfile.nickname;\n    // }else{\n    //   this.auth.getProfile((err, profile)=>{\n    //   this.username = profile.nickname;\n    //   });\n    // }\n  }\n  isAuthenticated(): boolean {\n    return this.auth.isAuthenticated();\n  }\n\n  logout(): void {\n    this.auth.logout();\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n      name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n      name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n      name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n      <option *ngFor=\\\"let difficulty of difficulties\\\" [value] = difficulty>\\n        {{difficulty}}\\n      </option>\\n    </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Injector } from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport { AuthGuardService } from '../../services/auth-guard.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name:\"\",\n  desc:\"\",\n  difficulty:\"Easy\"\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css'],\n  providers: [DataService, AuthGuardService]\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = ['Easy', \"Medium\", \"Hard\", \"Super\"];\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  constructor(private data: DataService, private authGuard: AuthGuardService) { }\n\n  ngOnInit() {\n  }\n  addProblem(): void {\n    this.data.addProblem(this.newProblem)\n              .catch(error=>console.log(error));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n  // isAdmin(): boolean{\n  //   return this.authGuard.isAdmin();\n  // }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-8\\\">\\n    <div>\\n      <br />\\n      <h2>\\n        {{problem.id}}. {{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n  <div class=\\\"hidden-xs col-sm-12 col-md-0\\\">\\n    <app-editor></app-editor>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Problem} from '../../models/problem.model';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css'],\n  providers: [DataService]\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor(\n    private route : ActivatedRoute,\n    private data : DataService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params=>{\n      this.data.getProblem(+params[\"id\"])\n                .then(problem=>this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  min-width:  65px;\\n  margin-right: 10px;\\n}\\n\\n.label.difficulty {\\n  text-align: center;\\n  float:left;\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n\\n.title {\\n  font-size: 1.2em;\\n  color: black;\\n}\\n\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n    <div class=\\\"list-group\\\">\\n      <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink] = \\\"['/problems',problem.id]\\\">\\n        <span class=\\\"{{'label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty}}</span>\\n          <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n      </a>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport {Subscription} from 'rxjs';\n//import { PROBLEMS } from '../../mock-problems'\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css'],\n  providers: [DataService]\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[] = [];\n  subscriptionProblems: Subscription;\n  constructor(private data : DataService) { }\n\n  ngOnInit() {\n    //this.problems = PROBLEMS;\n    this.getProblems();\n  }\n\n  getProblems() : void {\n    this.subscriptionProblems = this.data.getProblems()\n                                          .subscribe(problems=>this.problems = problems);\n  }\n}\n","module.exports = \".tab-pane{\\n  margin-right: 20px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <ul class=\\\"nav nav-pills\\\">\\n    <li class=\\\"active nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"#profile\\\">Personal Information</a></li>\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" data-toggle=\\\"pill\\\" href=\\\"#password\\\">Change Password</a></li>\\n  </ul>\\n  <hr>\\n  <div class=\\\"tab-content\\\">\\n    <div id=\\\"profile\\\" class=\\\"tab-pane fade in active\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n        name=\\\"email\\\" disabled value=\\\"{{email}}\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">User Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\"\\n        name=\\\"username\\\" disabled value=\\\"{{username}}\\\">\\n      </div>\\n    </div>\\n\\n    <div id=\\\"password\\\" class=\\\"tab-pane fade\\\">\\n      <form class=\\\"nvbar-form\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-success\\\" (click)=\\\"resetPassword()\\\">Reset Password</button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Injector } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  providers:[AuthService]\n})\nexport class ProfileComponent implements OnInit {\n  email: string = \"\";\n  username: string =\"\";\n  profile: any;\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    console.log(\"profile: \"+this.profile);\n    if(this.auth.userProfile){\n      this.profile = this.auth.userProfile;\n      this.username = this.profile.nickname;\n      this.email = this.profile.email;\n      console.log('email: '+this.email);\n    }else{\n      this.auth.getProfile((err, profile)=>{\n        this.profile = profile;\n        this.username = this.profile.nickname;\n        this.email = this.profile.name;\n        console.log(\"email: \"+this.email);\n        console.log('keys: '+Object.keys(this.profile));\n      });\n    }\n\n\n  }\n  resetPassword(){\n    this.auth.resetPassword();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n\n  // isAdmin(): boolean {\n  //   if(this.auth.isAuthenticated()){\n  //     this.auth.getProfile((err, profile)=>{\n  //       console.log(\"keys: \"+Object.keys(profile));\n  //       if(profile.roles.includes(\"Admin\")){\n  //         return true;\n  //       }else{\n  //         return false;\n  //       }\n  //     });\n  //   }\n  //   return false;\n  // }\n\n}\n","// src/app/auth/auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as auth0 from 'auth0-js';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\n// import 'rxjs/add/operator/toPromise';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n  clientID: string = 'Q4XsNsLRP2aU7pYf5fJvdM3c5tGIxWke';\n  domain: string = 'binwei1988.auth0.com';\n  auth0 = new auth0.WebAuth({\n    clientID: this.clientID,\n    domain: this.domain,\n    responseType: 'token id_token',\n    redirectUri: 'http://localhost:3000/callback',\n    scope: 'openid profile'\n  });\n\n  userProfile: any;\n\nconstructor(public router: Router, private http: HttpClient) {}\n\npublic login(): any {\n  this.auth0.authorize();\n  }\n\n\npublic handleAuthentication(): void {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        window.location.hash = '';\n        this.setSession(authResult);\n        this.router.navigate(['/home']);\n      } else if (err) {\n        this.router.navigate(['/home']);\n        console.log(err);\n      }\n    });\n  }\n\n  private setSession(authResult): void {\n      // Set the time that the Access Token will expire at\n      const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt);\n    }\n\n    public logout(): void {\n      // Remove tokens and expiry time from localStorage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at');\n      // Go back to the home route\n      this.router.navigate(['/']);\n    }\n\n    public isAuthenticated(): boolean {\n      // Check whether the current time is past the\n      // Access Token's expiry time\n      const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '{}');\n      return new Date().getTime() < expiresAt;\n    }\n\n    public getProfile(cb): void {\n      const accessToken = localStorage.getItem('access_token');\n      //console.log(\"token: \"+accessToken);\n      if (!accessToken) {\n        throw new Error('Access Token must exist to fetch profile');\n      }\n\n      const self = this;\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\n        if (profile) {\n          self.userProfile = profile;\n\n        }\n        cb(err, profile);\n      });\n    }\n\n    public resetPassword(){\n      let profile = this.userProfile;\n      let url: string = `https://${this.domain}/dbconnections/change_password`;\n      let headers = new HttpHeaders().set('content-type','application/json');\n      console.log(\"profile-email \"+profile.name);\n      let body = {\n        client_id: this.clientID,\n        email: profile.name,\n        connection: 'Username-Password-Authentication'\n       };\n      this.http.post(url, body, {headers})\n              .toPromise()\n              .then((res: any)=>{\n                console.log(res.json());\n              })\n              .catch(this.handleError);\n    }\n\n    private handleError(error: any): Promise<any>{\n      console.error('An error occured', error);\n      return Promise.reject(error.body | error);\n    }\n  }\n","import { Injectable } from '@angular/core';\n\nimport io from 'socket.io-client';\n\n//declare var io: any;\ndeclare var ace: any;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\n  collaborationSocket: any;\n  clientsInfo: Object = {};\n  clientNum: number = 0;\n\n  constructor() { }\n\n  init(editor:any, sessionId: string): void {\n    this.collaborationSocket = io(window.location.origin, { query: 'sessionId=' + sessionId });\n\n    this.collaborationSocket.on(\"change\", (delta: string) => {\n      console.log('collaboration: editor changes by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n\n    // this.collaborationSocket.on(\"cursorMove\", (cursor) => {\n    //   console.log(\"cursor move: \" + cursor);\n    //   let session = editor.getSession();\n    //   cursor = JSON.parse(cursor);\n    //   let x = cursor['row'];\n    //   let y = cursor['column'];\n    //   let changeClientId = cursor['socketId'];\n    //   console.log(x + ' ' + y + ' ' + changeClientId);\n    //\n    //   if (changeClientId in this.clientsInfo) {\n    //     session.removeMarker(this.clientsInfo[changeClientId]['marker']);\n    //   } else {\n    //     this.clientsInfo[changeClientId] = {};\n    //\n    //     let css = document.createElement(\"style\");\n    //     css.type = \"text/css\";\n    //     css.innerHTML = \".editor_cursor_\" + changeClientId\n    //         + \" { position:absolute; background:\" + COLORS[this.clientNum] + \";\"\n    //         + \" z-index: 100; width:3px !important; }\";\n    //\n    //     document.body.appendChild(css);\n    //     this.clientNum++;\n    //   }\n    //\n    //   let Range = ace.require('ace/range').Range;\n    //   let newMarker = session.addMarker(new Range(x, y, x, y + 1), 'editor_cursor_' + changeClientId, true);\n    //   this.clientsInfo[changeClientId]['marker'] = newMarker;\n    // });\n\n    // Test\n    this.collaborationSocket.on(\"message\", (message) => {\n      console.log(\"received: \" + message);\n    })\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit(\"change\", delta);\n  }\n\n  cursorMove(cursor : string): void {\n    this.collaborationSocket.emit(\"cursorMove\", cursor);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit(\"restoreBuffer\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Problem} from '../models/problem.model';\n//import {PROBLEMS} from '../mock-problems';\nimport {HttpClient, HttpResponse, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\n//import {Observable} from 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: HttpClient) { }\n\n  getProblems(): Observable<Problem[]>{\n    this.http.get<Problem[]>(\"api/v1/problems\")\n      .toPromise()\n      .then((res: Problem[])=>{\n        this.problemsSource.next(res);\n      })\n      .catch(this.handleError);\n      return this.problemsSource.asObservable();\n  }\n\n  // handle error\n  private handleError(error: any): Promise<any>{\n    console.error('An error occured', error);\n    return Promise.reject(error.body | error);\n  }\n\n  getProblem(id: number) : Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n                    .toPromise()\n                    .then((res: Problem) => res)\n                    .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem): Promise<Problem> {\n    let headers = new HttpHeaders().set('content-type', 'application/json');\n    return this.http.post('api/v1/problems', problem, {headers})\n                    .toPromise()\n                    .then((res: Problem)=>{\n                      this.getProblems();\n                      return res;\n                    })\n                    .catch(this.handleError);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}